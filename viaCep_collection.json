{
	"info": {
		"_postman_id": "75e110eb-a65c-492e-a0a7-6612e5690d78",
		"name": "ci_ViaCep",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18474643"
	},
	"item": [
		{
			"name": "ViaCep-Consult",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function zipCode() {\r",
							"\r",
							"    var zipCode = [\"02077-045\",\"13458-580\",\"03015-017\",\"05892-387\",\"08452-252\",\"04877-265\",\"08320-685\",\"04182-125\",\"02987-265\",\"08240-174\",\"04405-185\",\"88058-115\",\"88020-230\",\"88090-561\",\"88066-405\",\"88058-256\",\"88040-445\",\"88048-418\",\"88066-420\",\"88066-407\",\"52031-216\",\"50920-825\",\"50810-065\",\"52090-168\",\"52160-231\",\"52121-032\",\"50790-140\",\"51310-540\",\"52190-480\",\"50610-631\",\"41321-205\",\"41320-210\",\"41321-240\",\"41321-830\",\"41321-835\",\"41321-841\",\"41231-085\",\"41342-565\",\"41205-560\",\"41370-075\",\"23545-037\",\"23548-007\",\"23595-180\",\"23580-420\",\"23555-240\",\"23587-545\",\"23548-013\",\"23555-306\",\"23580-430\",\"23548-163\",\"30672-772\",\"31744-620\",\"30666-482\",\"30640-438\",\"30668-176\",\"31846-022\",\"31540-083\",\"30518-321\",\"30451-535\",\"31741-051\",\"69036-662\",\"69036-664\",\"69030-418\",\"69036-666\",\"69015-754\",\"69075-763\",\"69053-770\",\"69008-410\",\"69020-083\",\"69065-016\",\"74959-198\",\"74988-833\",\"74786-610\",\"74786-640\",\"74786-612\",\"74786-642\",\"74786-614\",\"74786-644\",\"74786-616\",\"74786-646\",\"64090-451\",\"64018-375\",\"64013-450\",\"64023-110\",\"64033-512\",\"64039-650\",\"64033-588\",\"64013-451\",\"64018-380\",\"64090-452\",\"29033-302\",\"29047-058\",\"29024-043\",\"29033-350\",\"29032-785\",\"29032-030\",\"29024-040\",\"29023-047\",\"29033-395\",\"29024-060\"];\r",
							"\r",
							"    var randomItem = zipCode[Math.floor(Math.random() * zipCode.length)];\r",
							"    \r",
							"    return randomItem; \r",
							"}\r",
							"\r",
							"pm.variables.set(\"ZipCode\", zipCode());\r",
							"\r",
							"console.log(zipCode())"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"ZipCode\", JSON.parse(responseBody).cep);\r",
							"pm.environment.set(\"City\",JSON.parse(responseBody).localidade);\r",
							"pm.environment.set(\"Street\", JSON.parse(responseBody).logradouro);\r",
							"pm.environment.set(\"Complement\", JSON.parse(responseBody).complemento);\r",
							"pm.environment.set(\"Neighbourhood\", JSON.parse(responseBody).bairro);\r",
							"pm.environment.set(\"Locality\", JSON.parse(responseBody).localidade);\r",
							"pm.environment.set(\"State\", JSON.parse(responseBody).uf);\r",
							"pm.environment.set(\"AreaCode\", JSON.parse(responseBody).ddd);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check cep is true\", function () {\r",
							"pm.expect(pm.variables.get(\"ZipCode\")).to.eql(JSON.parse(responseBody).cep);\r",
							"});\r",
							"\r",
							"pm.test(\"Check logradouro is true\", function () {\r",
							"pm.expect(pm.variables.get(\"Street\")).to.eql(JSON.parse(responseBody).logradouro);\r",
							"});\r",
							"\r",
							"pm.test(\"Check complemento is true\", function () {\r",
							"pm.expect(pm.variables.get(\"Complement\")).to.eql(JSON.parse(responseBody).complemento);\r",
							"});\r",
							"\r",
							"pm.test(\"Check bairro is true\", function () {\r",
							"pm.expect(pm.variables.get(\"Neighbourhood\")).to.eql(JSON.parse(responseBody).bairro);\r",
							"});\r",
							"\r",
							"pm.test(\"Check balocalidade is true\", function () {\r",
							"pm.expect(pm.variables.get(\"Locality\")).to.eql(JSON.parse(responseBody).localidade);\r",
							"});\r",
							"\r",
							"pm.test(\"Check uf is true\", function () {\r",
							"pm.expect(pm.variables.get(\"State\")).to.eql(JSON.parse(responseBody).uf);\r",
							"});\r",
							"\r",
							"pm.test(\"Check ddd is true\", function () {\r",
							"pm.expect(pm.variables.get(\"AreaCode\")).to.eql(JSON.parse(responseBody).ddd);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{ZipCode}}/json/",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{ZipCode}}",
						"json",
						""
					]
				}
			},
			"response": []
		}
	]
}